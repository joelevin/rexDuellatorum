package {	import flash.events.Event;	import flash.events.KeyboardEvent;	import flash.display.MovieClip;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.display.Stage;	import WorldMap;	import flash.display.Sprite;	public class RPGText extends MovieClip	{		//private const SPEAKER:int = 0;		//private const TEXT:int = 0;		private var _currentTextBlockIndex:int = 0;		private var _currentTextBlock:String;		private var _textBlocks:Array;		private var _txt:TextField = new TextField();		private var _stageRef:Stage;		public var isOver:Boolean;		private var worldMap:WorldMap;		private var _textFormat;		private var bg:Sprite;		// constructor code		public function RPGText(txt:TextField, textFormat:TextFormat, stageRef:Stage, worldMap:WorldMap, bg:Sprite)		{			this.bg = bg;			_txt = txt;			_textFormat = textFormat;			_txt.setTextFormat(_textFormat);			//_txt.embedFonts = true;			_stageRef = stageRef;			this.worldMap = worldMap;					}		public function set textBlocks(txtArray:Array):void		{			_textBlocks = txtArray;		}		public function startText():void		{			isOver = false;			_currentTextBlock = _textBlocks[_currentTextBlockIndex];			//characterIcon.gotoAndStop(_textBlocks[_currentTextBlockIndex][SPEAKER]);			bg.addEventListener(Event.ENTER_FRAME, updateText);			_stageRef.addEventListener(KeyboardEvent.KEY_DOWN, fillText);		}		private function updateText(e:Event):void		{			if (_txt.text.length < _currentTextBlock.length)			{				_txt.text = _currentTextBlock.substr(0,_txt.text.length + 1);				_txt.setTextFormat(_textFormat);			}			else			{				bg.removeEventListener(Event.ENTER_FRAME, updateText);				fillText();			}		}		private function fillText(e:KeyboardEvent = null):void		{			_txt.text = _currentTextBlock;			_txt.setTextFormat(_textFormat);			if (_currentTextBlockIndex < _textBlocks.length-1)			{				_stageRef.addEventListener(KeyboardEvent.KEY_DOWN, nextTextBlock);			}			else //end of conversation			{				bg.removeChild(this);				bg.removeChild(this._txt);				_stageRef.removeEventListener(KeyboardEvent.KEY_DOWN, fillText);				_stageRef.removeEventListener(KeyboardEvent.KEY_DOWN, nextTextBlock);				_textBlocks.splice(0,_textBlocks.length);				worldMap.startTheGame();			}		}		private function nextTextBlock(e:KeyboardEvent):void		{			_stageRef.removeEventListener(KeyboardEvent.KEY_DOWN, nextTextBlock);			_txt.text = "";// clear the text  			_currentTextBlockIndex++;			_currentTextBlock = _textBlocks[_currentTextBlockIndex];// set the text  			//characterIcon.gotoAndStop(_textBlocks[_currentTextBlockIndex][SPEAKER]);			// set the character icon  ;			bg.addEventListener(Event.ENTER_FRAME, updateText);// start updating the text  			_stageRef.addEventListener(KeyboardEvent.KEY_DOWN, fillText);		}	}}